import function from module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test a matrix contains integers:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test with an empty matrix:
    >>> matrix_divided({}, 3)
    []
    
Test with big num:
    >>> matrix_divided([[3, 2, 3],[12, 5, 9]], 701)
    [[0.0, 0.0, 0.0], [0.02, 0.01, 0.01]]

Test with diferrent length lists:
    >>> matrix_divided([[2, 7, 8], [3, 2]], 9)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test with non integer or float num:
    >>> matrix_divided([[1, 2, 3], [7, 8, 9]], "hi")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3], [7, 8, 9]], [8, 9, 7])
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test with non integers metrix:
    >>> matrix_divided ([["hello", "cat"], ["hi"]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with Zero:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test with negative number:
    >>> matrix_divided([[1, 8, 3],[7, 5, 0]], -1)
    [[-1.0, -8.0, -3.0], [-7.0, -5.0, -0.0]]
