Test BaseGeometry class
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> base = BaseGeometry()
    >>> isinstance(base, BaseGeometry)
    True
    >>> base.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> base.integer_validator("count", -1)
    Traceback (most recent call last):
    ValueError: count must be greater than 0

    >>> base.integer_validator("count", 0)
    Traceback (most recent call last):
    ValueError: count must be greater than 0

    >>> base.integer_validator("count", 1.5)
    Traceback (most recent call last):
    TypeError: count must be an integer

    >>> base.integer_validator("count", [9, 7])
    Traceback (most recent call last):
    TypeError: count must be an integer

    >>> base.integer_validator("count", {})
    Traceback (most recent call last):
    TypeError: count must be an integer

    >>> base.integer_validator("count", "hi")
    Traceback (most recent call last):
    TypeError: count must be an integer

    >>> base.integer_validator("count")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> base.integer_validator(12)
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

